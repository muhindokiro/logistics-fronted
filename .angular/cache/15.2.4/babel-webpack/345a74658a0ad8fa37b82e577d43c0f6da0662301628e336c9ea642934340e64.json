{"ast":null,"code":"import { fromEvent, merge, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nfunction AppComponent_section_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 1)(1, \"h2\", 2);\n    i0.ɵɵtext(2, \"Overlay with Text\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.title = 'DEVZKONA';\n      this.hasInternetConnection = true;\n    }\n    ngOnInit() {\n      this.createOnline$().subscribe(isOnline => {\n        this.hasInternetConnection = isOnline;\n        console.log('Are you online? ', isOnline);\n      });\n    }\n    createOnline$() {\n      return merge(fromEvent(window, 'offline').pipe(map(() => false)), fromEvent(window, 'online').pipe(map(() => true)), new Observable(sub => {\n        sub.next(navigator.onLine);\n        sub.complete();\n      }));\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[\"class\", \"connection\", 4, \"ngIf\"], [1, \"connection\"], [1, \"text\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"router-outlet\");\n        i0.ɵɵtemplate(2, AppComponent_section_2_Template, 3, 0, \"section\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasInternetConnection);\n      }\n    },\n    dependencies: [i1.NgIf, i2.RouterOutlet],\n    styles: [\".connection[_ngcontent-%COMP%]{position:fixed;display:none;width:100%;height:100%;inset:0;background-color:red;z-index:2;cursor:pointer}.text[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;font-size:50px;color:#fff;transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%)}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}